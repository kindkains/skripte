#!/bin/bash

# Regeln für psad eintragen
# Quelle: https://www.digitalocean.com/community/tutorials/how-to-use-psad-to-detect-network-intrusion-attempts-on-an-ubuntu-vps

x=0

clear
echo "Erzeuge Regeln für psad"
echo "The first rule will allow all traffic generated by our server, directed at our server. This type of connection is generally used for services to communicate with each other and pass information easily:"
echo
sleep $x
sudo iptables -A INPUT -i lo -j ACCEPT

echo "Next, we want to add a rule to explicitly allow all traffic related to an existing connection. This will allow our current sessions to continue uninterrupted:"
echo
sleep $x
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

echo "SSH und Apache2 auf Port 80 und 443 erlauben"
echo
sleep $x
sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT

echo "After you are done adding the legitimate services, we will drop all remaining connections. Anything that hits this rule did not match our rules that were for legitimate traffic.

Before we do that though, this we need to add the rule that tell iptables to begin logging traffic. This will cause iptables to log traffic that has not been handled yet. We also should add this rule to the forward chain in case we end up forwarding traffic elsewhere."
echo
sleep $x
sudo iptables -A INPUT -j LOG
sudo iptables -A FORWARD -j LOG

echo "Finally, let’s drop all extraneous traffic that hasn’t matched yet. We can do this by either adding a rule that matches everything in the chain to the end like this:"
echo
sleep $x
sudo iptables -A INPUT -j DROP
